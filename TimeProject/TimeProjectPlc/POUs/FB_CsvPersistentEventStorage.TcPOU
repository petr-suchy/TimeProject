<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_CsvPersistentEventStorage" Id="{b6d466bf-6b6d-4c4d-a0a8-da7bfd6efc42}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CsvPersistentEventStorage IMPLEMENTS I_PersistentEventStorage
VAR
	eWriteState : (FILE_OPEN_TRIGGER, FILE_OPEN, WAIT_FOR_EVENT, WRITE_EVENT_TRIGGER, WRITE_EVENT, FILE_CLOSE_TRIGGER, FILE_CLOSE, ERROR);
	stEventToWrite : ST_Event;
	sCsvString : T_MaxString;
	
	fbFileOpen : FB_FileOpen := (sPathName := 'C:\events.log', nMode := FOPEN_MODEAPPEND OR FOPEN_MODETEXT);
	fbFilePuts : FB_FilePuts;
	fbFileClose : FB_FileClose;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE eWriteState OF
	
	FILE_OPEN_TRIGGER:
		fbFileOpen(bExecute := TRUE);
		eWriteState := FILE_OPEN;
		
	FILE_OPEN:
		fbFileOpen(bExecute := FALSE);
		IF fbFileOpen.bError THEN
			eWriteState := ERROR;
		ELSIF NOT fbFileOpen.bBusy AND fbFileOpen.hFile <> 0 THEN
			eWriteState := WAIT_FOR_EVENT;
		END_IF
		
	WAIT_FOR_EVENT:
		// Wait for an event to be written into stEventToWrite by AddEvent() method.
	WRITE_EVENT_TRIGGER:
		sCsvString := CreateCsvString(stEvent := stEventToWrite);
		fbFilePuts(bExecute := TRUE,
				   hFile := fbFileOpen.hFile,
				   sLine := sCsvString);
		eWriteState := WRITE_EVENT;
		
	WRITE_EVENT:
		fbFilePuts(bExecute := FALSE);
		IF fbFilePuts.bError THEN
			eWriteState := ERROR;
		ELSIF NOT fbFilePuts.bBusy THEN
			eWriteState := FILE_CLOSE_TRIGGER;
		END_IF
		
	FILE_CLOSE_TRIGGER:
		fbFileClose(bExecute := TRUE,
					hFile := fbFileOpen.hFile);
		eWriteState := FILE_CLOSE;
		
	FILE_CLOSE:
		fbFileClose(bExecute := FALSE);
		IF fbFileClose.bError THEN
			eWriteState := ERROR;
		ELSIF NOT fbFileClose.bBusy THEN
			eWriteState := FILE_OPEN_TRIGGER;
		END_IF
		
	ERROR:
		// Do nothing
END_CASE]]></ST>
    </Implementation>
    <Method Name="CreateCsvString" Id="{167c856f-461d-45e1-b3df-b9205930bc35}">
      <Declaration><![CDATA[METHOD PRIVATE CreateCsvString : T_MaxString
VAR_INPUT
	stEvent : REFERENCE TO ST_Event;
END_VAR
VAR
	sTempString : T_MaxString;
END_VAR
VAR CONSTANT
	sCsvChar : STRING(1) := ',';
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[sTempString := TO_STRING(stEvent.eEventType);
sTempString := CONCAT(STR1 := sTempString, STR2 := sCsvChar);
sTempString := CONCAT(STR1 := sTempString, STR2 := TO_STRING(stEvent.eEventSeverity));
sTempString := CONCAT(STR1 := sTempString, STR2 := sCsvChar);
sTempString := CONCAT(STR1 := sTempString, STR2 := TO_STRING(stEvent.nEventIdentity));
sTempString := CONCAT(STR1 := sTempString, STR2 := sCsvChar);
sTempString := CONCAT(STR1 := sTempString, STR2 := stEvent.sEventText);
sTempString := CONCAT(STR1 := sTempString, STR2 := sCsvChar);
sTempString := CONCAT(STR1 := sTempString, STR2 := TO_STRING(stEvent.dtTimestamp));
sTempString := CONCAT(STR1 := sTempString, STR2 := '$n');

CreateCsvString := sTempString;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="StoreEvent" Id="{44e4155d-7bf2-4577-b19d-81c1e94a07f5}">
      <Declaration><![CDATA[METHOD StoreEvent
VAR_INPUT
	stEvent	: ST_Event;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eWriteState = WAIT_FOR_EVENT THEN
	stEventToWrite := stEvent;
	eWriteState := WRITE_EVENT_TRIGGER;
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_CsvPersistentEventStorage">
      <LineId Id="9" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="33" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="37" Count="1" />
      <LineId Id="42" Count="1" />
      <LineId Id="39" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="56" Count="2" />
      <LineId Id="60" Count="1" />
      <LineId Id="59" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="70" Count="1" />
      <LineId Id="73" Count="1" />
      <LineId Id="72" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="35" Count="1" />
      <LineId Id="27" Count="0" />
    </LineIds>
    <LineIds Name="FB_CsvPersistentEventStorage.CreateCsvString">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="2" />
      <LineId Id="15" Count="5" />
      <LineId Id="22" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="23" Count="0" />
    </LineIds>
    <LineIds Name="FB_CsvPersistentEventStorage.StoreEvent">
      <LineId Id="7" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="13" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>